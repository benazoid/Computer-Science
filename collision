protected void renderFrame(Graphics g) {
        maps[level].drawMap(g,this,input);
        GameObject[][] grid = maps[level].getGrid();
        for(int i = 0; i < grid.length; i++){
            for(int j = 0; j < grid[i].length; j++){
                for(int k = 0; k < maps[level].getMoves().size(); k++){
                    GameObject gObj = grid[i][j];
                    Rectangle rect = new Rectangle(maps[level].getMoves().get(k).getRect());
                    if(gObj instanceof Wall){
                        collideRectRect(gObj.getRect(), rect);
                        maps[level].getMoves().get(k).setLoc(rect.x, rect.y);
                    }
                }
            }
        }
        
    }//--end of renderFrame method--

    private String getColPos(Rectangle r1, Rectangle r2) {
        String s;
        if ((r1.y + r1.height + 1 > r2.y && r2.y + r2.height + 1 > r1.y) && (r1.x + r1.width > r2.x - 1 && r2.x + r2.width + 1 > r1.x) && !r1.equals(r2)) {
            double x1 = (r1.x + Math.floor((r1.width) / 2));
            double y1 = (r1.y + Math.floor((r1.height) / 2));
            double x2 = (r2.x + Math.floor((r2.width) / 2));
            double y2 = (r2.y + Math.floor((r2.height) / 2));
            double distH, distV;
            String dir, horiz, vert;

            if (x1 > x2) {
                horiz = "left";
            } else {
                horiz = "right";
            }

            distH = Math.abs(x1 - x2);
            if (y1 > y2) {
                vert = "top";
            } else {
                vert = "bottom";
            }

            distV = Math.abs(y1 - y2);
            if (distH > distV) {
                return horiz;
            } else {
                return vert;
            }
        }
        return "null";
    }

    
    int a,b,c,d = 0;
    
    public void collideRectRect(Rectangle r1, Rectangle r2){
        Rectangle rect = new Rectangle(r2);
        String loc = getColPos(r1,rect);
        if(!loc.equals("top"))
            a++;
        while(loc.equals("top") || a > 0){
            a = 0;
            r2.y-=1;
            loc = getColPos(r1,r2);
        }
        if(!loc.equals("bottom"))
            b++;
        while(!loc.equals("bottom") || b > 0){
            b = 0;
            r2.y+=1;
            loc = getColPos(r1,r2);
        }
        if(!loc.equals("left"))
            b++;
        while(loc.equals("left") || c > 0){
            c = 0;
            r2.x-=1;
            loc = getColPos(r1,r2);
        }
        if(!loc.equals("right"))
            b++;
        while(loc.equals("right") || d > 0){
            d = 0;
            r2.x+=1;
            loc = getColPos(r1,r2);
        }
    }
